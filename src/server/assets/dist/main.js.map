{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/client/camera-manager.js","src/client/lib/orbital-controls.js","src/client/light-manager.js","src/client/main.js","src/client/planet.js","src/client/visual-manager.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nconst CAMERA_SPEED = 0.1;\n\nclass CameraManager {\n  constructor(scene, _gameManager) {\n    this.gameManager = _gameManager;\n    const fov = 60;\n    const aspect = window.innerWidth / window.innerHeight;\n    const near = 0.1;\n    const far = 10000;\n\n    this.camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\n\n    this.camera.position.set(0, 1.5, 1.2);\n    scene.add(this.camera);\n\n\n    this.camera.rotation.x = 0;\n    this.camera.rotation.x = -0.9;\n\n    // Bind functions\n    this.raiseCamera = this.raiseCamera.bind(this);\n    this.lowerCamera = this.lowerCamera.bind(this);\n    this.moveLeft = this.moveLeft.bind(this);\n    this.moveRight = this.moveRight.bind(this);\n    this.moveForward = this.moveForward.bind(this);\n    this.moveBackward = this.moveBackward.bind(this);\n  }\n\n  update() { }\n\n  _updateCameraDebugInfo() {\n    $('#camera-data').html(`(${this.camera.position.x},${this.camera.position.y},${this.camera.position.z})`);\n  }\n\n  raiseCamera() {\n    this.camera.position.y += CAMERA_SPEED;\n    this._updateCameraDebugInfo();\n  }\n\n  lowerCamera() {\n    this.camera.position.y -= CAMERA_SPEED;\n    this._updateCameraDebugInfo();\n  }\n\n  moveLeft() {\n    this.camera.position.x -= CAMERA_SPEED;\n    this._updateCameraDebugInfo();\n  }\n\n  moveRight() {\n    this.camera.position.x += CAMERA_SPEED;\n    this._updateCameraDebugInfo();\n  }\n\n  moveForward() {\n    this.camera.position.z -= CAMERA_SPEED;\n    this._updateCameraDebugInfo();\n  }\n\n  moveBackward() {\n    this.camera.position.z += CAMERA_SPEED;\n    this._updateCameraDebugInfo();\n  }\n}\n\nmodule.exports = CameraManager;\n","/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one finger move\n//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n//    Pan - right mouse, or arrow keys / touch: three finger swipe\n\nTHREE.OrbitControls = function ( object, domElement ) {\n\n  this.object = object;\n\n  this.domElement = ( domElement !== undefined ) ? domElement : document;\n\n  // Set to false to disable this control\n  this.enabled = true;\n\n  // \"target\" sets the location of focus, where the object orbits around\n  this.target = new THREE.Vector3();\n\n  // How far you can dolly in and out ( PerspectiveCamera only )\n  this.minDistance = 0;\n  this.maxDistance = Infinity;\n\n  // How far you can zoom in and out ( OrthographicCamera only )\n  this.minZoom = 0;\n  this.maxZoom = Infinity;\n\n  // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n  this.minPolarAngle = 0; // radians\n  this.maxPolarAngle = Math.PI; // radians\n\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n  this.minAzimuthAngle = - Infinity; // radians\n  this.maxAzimuthAngle = Infinity; // radians\n\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n  this.enableDamping = false;\n  this.dampingFactor = 0.25;\n\n  // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n  this.enableZoom = true;\n  this.zoomSpeed = 1.0;\n\n  // Set to false to disable rotating\n  this.enableRotate = true;\n  this.rotateSpeed = 1.0;\n\n  // Set to false to disable panning\n  this.enablePan = true;\n  this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n  this.autoRotate = false;\n  this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n  // Set to false to disable use of the keys\n  this.enableKeys = true;\n\n  // The four arrow keys\n  this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n  // Mouse buttons\n  this.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\n  // for reset\n  this.target0 = this.target.clone();\n  this.position0 = this.object.position.clone();\n  this.zoom0 = this.object.zoom;\n\n  //\n  // public methods\n  //\n\n  this.getPolarAngle = function () {\n\n    return spherical.phi;\n\n  };\n\n  this.getAzimuthalAngle = function () {\n\n    return spherical.theta;\n\n  };\n\n  this.saveState = function () {\n\n    scope.target0.copy( scope.target );\n    scope.position0.copy( scope.object.position );\n    scope.zoom0 = scope.object.zoom;\n\n  };\n\n  this.reset = function () {\n\n    scope.target.copy( scope.target0 );\n    scope.object.position.copy( scope.position0 );\n    scope.object.zoom = scope.zoom0;\n\n    scope.object.updateProjectionMatrix();\n    scope.dispatchEvent( changeEvent );\n\n    scope.update();\n\n    state = STATE.NONE;\n\n  };\n\n  // this method is exposed, but perhaps it would be better if we can make it private...\n  this.update = function () {\n\n    var offset = new THREE.Vector3();\n\n    // so camera.up is the orbit axis\n    var quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n    var quatInverse = quat.clone().inverse();\n\n    var lastPosition = new THREE.Vector3();\n    var lastQuaternion = new THREE.Quaternion();\n\n    return function update() {\n\n      var position = scope.object.position;\n\n      offset.copy( position ).sub( scope.target );\n\n      // rotate offset to \"y-axis-is-up\" space\n      offset.applyQuaternion( quat );\n\n      // angle from z-axis around y-axis\n      spherical.setFromVector3( offset );\n\n      if ( scope.autoRotate && state === STATE.NONE ) {\n\n        rotateLeft( getAutoRotationAngle() );\n\n      }\n\n      spherical.theta += sphericalDelta.theta;\n      spherical.phi += sphericalDelta.phi;\n\n      // restrict theta to be between desired limits\n      spherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\n\n      // restrict phi to be between desired limits\n      spherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n      spherical.makeSafe();\n\n\n      spherical.radius *= scale;\n\n      // restrict radius to be between desired limits\n      spherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n      // move target to panned location\n      scope.target.add( panOffset );\n\n      offset.setFromSpherical( spherical );\n\n      // rotate offset back to \"camera-up-vector-is-up\" space\n      offset.applyQuaternion( quatInverse );\n\n      position.copy( scope.target ).add( offset );\n\n      scope.object.lookAt( scope.target );\n\n      if ( scope.enableDamping === true ) {\n\n        sphericalDelta.theta *= ( 1 - scope.dampingFactor );\n        sphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n      } else {\n\n        sphericalDelta.set( 0, 0, 0 );\n\n      }\n\n      scale = 1;\n      panOffset.set( 0, 0, 0 );\n\n      // update condition is:\n      // min(camera displacement, camera rotation in radians)^2 > EPS\n      // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n      if ( zoomChanged ||\n        lastPosition.distanceToSquared( scope.object.position ) > EPS ||\n        8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n        // scope.dispatchEvent( changeEvent );\n\n        lastPosition.copy( scope.object.position );\n        lastQuaternion.copy( scope.object.quaternion );\n        zoomChanged = false;\n\n        return true;\n\n      }\n\n      return false;\n\n    };\n\n  }();\n\n  this.dispose = function () {\n\n    scope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\n    scope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n    scope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\n\n    scope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\n    scope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\n    scope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\n\n    document.removeEventListener( 'mousemove', onMouseMove, false );\n    document.removeEventListener( 'mouseup', onMouseUp, false );\n\n    window.removeEventListener( 'keydown', onKeyDown, false );\n\n    //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n  };\n\n  //\n  // internals\n  //\n\n  var scope = this;\n\n  var changeEvent = { type: 'change' };\n  var startEvent = { type: 'start' };\n  var endEvent = { type: 'end' };\n\n  var STATE = { NONE: - 1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY: 4, TOUCH_PAN: 5 };\n\n  var state = STATE.NONE;\n\n  var EPS = 0.000001;\n\n  // current position in spherical coordinates\n  var spherical = new THREE.Spherical();\n  var sphericalDelta = new THREE.Spherical();\n\n  var scale = 1;\n  var panOffset = new THREE.Vector3();\n  var zoomChanged = false;\n\n  var rotateStart = new THREE.Vector2();\n  var rotateEnd = new THREE.Vector2();\n  var rotateDelta = new THREE.Vector2();\n\n  var panStart = new THREE.Vector2();\n  var panEnd = new THREE.Vector2();\n  var panDelta = new THREE.Vector2();\n\n  var dollyStart = new THREE.Vector2();\n  var dollyEnd = new THREE.Vector2();\n  var dollyDelta = new THREE.Vector2();\n\n  function getAutoRotationAngle() {\n\n    return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n  }\n\n  function getZoomScale() {\n\n    return Math.pow( 0.95, scope.zoomSpeed );\n\n  }\n\n  function rotateLeft( angle ) {\n\n    sphericalDelta.theta -= angle;\n\n  }\n\n  function rotateUp( angle ) {\n\n    sphericalDelta.phi -= angle;\n\n  }\n\n  var panLeft = function () {\n\n    var v = new THREE.Vector3();\n\n    return function panLeft( distance, objectMatrix ) {\n\n      v.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n      v.multiplyScalar( - distance );\n\n      panOffset.add( v );\n\n    };\n\n  }();\n\n  var panUp = function () {\n\n    var v = new THREE.Vector3();\n\n    return function panUp( distance, objectMatrix ) {\n\n      v.setFromMatrixColumn( objectMatrix, 1 ); // get Y column of objectMatrix\n      v.multiplyScalar( distance );\n\n      panOffset.add( v );\n\n    };\n\n  }();\n\n  // deltaX and deltaY are in pixels; right and down are positive\n  var pan = function () {\n\n    var offset = new THREE.Vector3();\n\n    return function pan( deltaX, deltaY ) {\n\n      var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n      if ( scope.object.isPerspectiveCamera ) {\n\n        // perspective\n        var position = scope.object.position;\n        offset.copy( position ).sub( scope.target );\n        var targetDistance = offset.length();\n\n        // half of the fov is center to top of screen\n        targetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n        // we actually don't use screenWidth, since perspective camera is fixed to screen height\n        panLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n        panUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n      } else if ( scope.object.isOrthographicCamera ) {\n\n        // orthographic\n        panLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n        panUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n      } else {\n\n        // camera neither orthographic nor perspective\n        console.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n        scope.enablePan = false;\n\n      }\n\n    };\n\n  }();\n\n  function dollyIn( dollyScale ) {\n\n    if ( scope.object.isPerspectiveCamera ) {\n\n      scale /= dollyScale;\n\n    } else if ( scope.object.isOrthographicCamera ) {\n\n      scope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n\n    } else {\n\n      console.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n      scope.enableZoom = false;\n\n    }\n\n  }\n\n  function dollyOut( dollyScale ) {\n\n    if ( scope.object.isPerspectiveCamera ) {\n\n      scale *= dollyScale;\n\n    } else if ( scope.object.isOrthographicCamera ) {\n\n      scope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n\n    } else {\n\n      console.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n      scope.enableZoom = false;\n\n    }\n\n  }\n\n  //\n  // event callbacks - update the object state\n  //\n\n  function handleMouseDownRotate( event ) {\n\n    //console.log( 'handleMouseDownRotate' );\n\n    rotateStart.set( event.clientX, event.clientY );\n\n  }\n\n  function handleMouseDownDolly( event ) {\n\n    //console.log( 'handleMouseDownDolly' );\n\n    dollyStart.set( event.clientX, event.clientY );\n\n  }\n\n  function handleMouseDownPan( event ) {\n\n    //console.log( 'handleMouseDownPan' );\n\n    panStart.set( event.clientX, event.clientY );\n\n  }\n\n  function handleMouseMoveRotate( event ) {\n\n    //console.log( 'handleMouseMoveRotate' );\n\n    rotateEnd.set( event.clientX, event.clientY );\n    rotateDelta.subVectors( rotateEnd, rotateStart );\n\n    var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n    // rotating across whole screen goes 360 degrees around\n    rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n    // rotating up and down along whole screen attempts to go 360, but limited to 180\n    rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n    rotateStart.copy( rotateEnd );\n\n    scope.update();\n\n  }\n\n  function handleMouseMoveDolly( event ) {\n\n    //console.log( 'handleMouseMoveDolly' );\n\n    dollyEnd.set( event.clientX, event.clientY );\n\n    dollyDelta.subVectors( dollyEnd, dollyStart );\n\n    if ( dollyDelta.y > 0 ) {\n\n      dollyIn( getZoomScale() );\n\n    } else if ( dollyDelta.y < 0 ) {\n\n      dollyOut( getZoomScale() );\n\n    }\n\n    dollyStart.copy( dollyEnd );\n\n    scope.update();\n\n  }\n\n  function handleMouseMovePan( event ) {\n\n    //console.log( 'handleMouseMovePan' );\n\n    panEnd.set( event.clientX, event.clientY );\n\n    panDelta.subVectors( panEnd, panStart );\n\n    pan( panDelta.x, panDelta.y );\n\n    panStart.copy( panEnd );\n\n    scope.update();\n\n  }\n\n  function handleMouseUp( event ) {\n\n    // console.log( 'handleMouseUp' );\n\n  }\n\n  function handleMouseWheel( event ) {\n\n    // console.log( 'handleMouseWheel' );\n\n    if ( event.deltaY < 0 ) {\n\n      dollyOut( getZoomScale() );\n\n    } else if ( event.deltaY > 0 ) {\n\n      dollyIn( getZoomScale() );\n\n    }\n\n    scope.update();\n\n  }\n\n  function handleKeyDown( event ) {\n\n    //console.log( 'handleKeyDown' );\n\n    switch ( event.keyCode ) {\n\n      case scope.keys.UP:\n        pan( 0, scope.keyPanSpeed );\n        scope.update();\n        break;\n\n      case scope.keys.BOTTOM:\n        pan( 0, - scope.keyPanSpeed );\n        scope.update();\n        break;\n\n      case scope.keys.LEFT:\n        pan( scope.keyPanSpeed, 0 );\n        scope.update();\n        break;\n\n      case scope.keys.RIGHT:\n        pan( - scope.keyPanSpeed, 0 );\n        scope.update();\n        break;\n\n    }\n\n  }\n\n  function handleTouchStartRotate( event ) {\n\n    //console.log( 'handleTouchStartRotate' );\n\n    rotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n  }\n\n  function handleTouchStartDolly( event ) {\n\n    //console.log( 'handleTouchStartDolly' );\n\n    var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n    var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n    var distance = Math.sqrt( dx * dx + dy * dy );\n\n    dollyStart.set( 0, distance );\n\n  }\n\n  function handleTouchStartPan( event ) {\n\n    //console.log( 'handleTouchStartPan' );\n\n    panStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n  }\n\n  function handleTouchMoveRotate( event ) {\n\n    //console.log( 'handleTouchMoveRotate' );\n\n    rotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n    rotateDelta.subVectors( rotateEnd, rotateStart );\n\n    var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n    // rotating across whole screen goes 360 degrees around\n    rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n    // rotating up and down along whole screen attempts to go 360, but limited to 180\n    rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n    rotateStart.copy( rotateEnd );\n\n    scope.update();\n\n  }\n\n  function handleTouchMoveDolly( event ) {\n\n    //console.log( 'handleTouchMoveDolly' );\n\n    var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n    var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n    var distance = Math.sqrt( dx * dx + dy * dy );\n\n    dollyEnd.set( 0, distance );\n\n    dollyDelta.subVectors( dollyEnd, dollyStart );\n\n    if ( dollyDelta.y > 0 ) {\n\n      dollyOut( getZoomScale() );\n\n    } else if ( dollyDelta.y < 0 ) {\n\n      dollyIn( getZoomScale() );\n\n    }\n\n    dollyStart.copy( dollyEnd );\n\n    scope.update();\n\n  }\n\n  function handleTouchMovePan( event ) {\n\n    //console.log( 'handleTouchMovePan' );\n\n    panEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n    panDelta.subVectors( panEnd, panStart );\n\n    pan( panDelta.x, panDelta.y );\n\n    panStart.copy( panEnd );\n\n    scope.update();\n\n  }\n\n  function handleTouchEnd( event ) {\n\n    //console.log( 'handleTouchEnd' );\n\n  }\n\n  //\n  // event handlers - FSM: listen for events and reset state\n  //\n\n  function onMouseDown( event ) {\n\n    if ( scope.enabled === false ) return;\n\n    event.preventDefault();\n\n    switch ( event.button ) {\n\n      case scope.mouseButtons.ORBIT:\n\n        if ( scope.enableRotate === false ) return;\n\n        handleMouseDownRotate( event );\n\n        state = STATE.ROTATE;\n\n        break;\n\n      case scope.mouseButtons.ZOOM:\n\n        if ( scope.enableZoom === false ) return;\n\n        handleMouseDownDolly( event );\n\n        state = STATE.DOLLY;\n\n        break;\n\n      case scope.mouseButtons.PAN:\n\n        if ( scope.enablePan === false ) return;\n\n        handleMouseDownPan( event );\n\n        state = STATE.PAN;\n\n        break;\n\n    }\n\n    if ( state !== STATE.NONE ) {\n\n      document.addEventListener( 'mousemove', onMouseMove, false );\n      document.addEventListener( 'mouseup', onMouseUp, false );\n\n      // scope.dispatchEvent( startEvent );\n\n    }\n\n  }\n\n  function onMouseMove( event ) {\n\n    if ( scope.enabled === false ) return;\n\n    event.preventDefault();\n\n    switch ( state ) {\n\n      case STATE.ROTATE:\n\n        if ( scope.enableRotate === false ) return;\n\n        handleMouseMoveRotate( event );\n\n        break;\n\n      case STATE.DOLLY:\n\n        if ( scope.enableZoom === false ) return;\n\n        handleMouseMoveDolly( event );\n\n        break;\n\n      case STATE.PAN:\n\n        if ( scope.enablePan === false ) return;\n\n        handleMouseMovePan( event );\n\n        break;\n\n    }\n\n  }\n\n  function onMouseUp( event ) {\n\n    if ( scope.enabled === false ) return;\n\n    handleMouseUp( event );\n\n    document.removeEventListener( 'mousemove', onMouseMove, false );\n    document.removeEventListener( 'mouseup', onMouseUp, false );\n\n    // scope.dispatchEvent( endEvent );\n\n    state = STATE.NONE;\n\n  }\n\n  function onMouseWheel( event ) {\n\n    if ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    handleMouseWheel( event );\n\n    // scope.dispatchEvent( startEvent ); // not sure why these are here...\n    // scope.dispatchEvent( endEvent );\n\n  }\n\n  function onKeyDown( event ) {\n\n    if ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n    handleKeyDown( event );\n\n  }\n\n  function onTouchStart( event ) {\n\n    if ( scope.enabled === false ) return;\n\n    switch ( event.touches.length ) {\n\n      case 1: // one-fingered touch: rotate\n\n        if ( scope.enableRotate === false ) return;\n\n        handleTouchStartRotate( event );\n\n        state = STATE.TOUCH_ROTATE;\n\n        break;\n\n      case 2: // two-fingered touch: dolly\n\n        if ( scope.enableZoom === false ) return;\n\n        handleTouchStartDolly( event );\n\n        state = STATE.TOUCH_DOLLY;\n\n        break;\n\n      case 3: // three-fingered touch: pan\n\n        if ( scope.enablePan === false ) return;\n\n        handleTouchStartPan( event );\n\n        state = STATE.TOUCH_PAN;\n\n        break;\n\n      default:\n\n        state = STATE.NONE;\n\n    }\n\n    if ( state !== STATE.NONE ) {\n\n      // scope.dispatchEvent( startEvent );\n\n    }\n\n  }\n\n  function onTouchMove( event ) {\n\n    if ( scope.enabled === false ) return;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    switch ( event.touches.length ) {\n\n      case 1: // one-fingered touch: rotate\n\n        if ( scope.enableRotate === false ) return;\n        if ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?...\n\n        handleTouchMoveRotate( event );\n\n        break;\n\n      case 2: // two-fingered touch: dolly\n\n        if ( scope.enableZoom === false ) return;\n        if ( state !== STATE.TOUCH_DOLLY ) return; // is this needed?...\n\n        handleTouchMoveDolly( event );\n\n        break;\n\n      case 3: // three-fingered touch: pan\n\n        if ( scope.enablePan === false ) return;\n        if ( state !== STATE.TOUCH_PAN ) return; // is this needed?...\n\n        handleTouchMovePan( event );\n\n        break;\n\n      default:\n\n        state = STATE.NONE;\n\n    }\n\n  }\n\n  function onTouchEnd( event ) {\n\n    if ( scope.enabled === false ) return;\n\n    handleTouchEnd( event );\n\n    // scope.dispatchEvent( endEvent );\n\n    state = STATE.NONE;\n\n  }\n\n  function onContextMenu( event ) {\n\n    if ( scope.enabled === false ) return;\n\n    event.preventDefault();\n\n  }\n\n  //\n\n  scope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\n\n  scope.domElement.addEventListener( 'mousedown', onMouseDown, false );\n  scope.domElement.addEventListener( 'wheel', onMouseWheel, false );\n\n  scope.domElement.addEventListener( 'touchstart', onTouchStart, false );\n  scope.domElement.addEventListener( 'touchend', onTouchEnd, false );\n  scope.domElement.addEventListener( 'touchmove', onTouchMove, false );\n\n  window.addEventListener( 'keydown', onKeyDown, false );\n\n  // force an update at start\n\n  this.update();\n\n};\n\nTHREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\n\nObject.defineProperties( THREE.OrbitControls.prototype, {\n\n  center: {\n\n    get: function () {\n\n      console.warn( 'THREE.OrbitControls: .center has been renamed to .target' );\n      return this.target;\n\n    }\n\n  },\n\n  // backward compatibility\n\n  noZoom: {\n\n    get: function () {\n\n      console.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n      return ! this.enableZoom;\n\n    },\n\n    set: function ( value ) {\n\n      console.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n      this.enableZoom = ! value;\n\n    }\n\n  },\n\n  noRotate: {\n\n    get: function () {\n\n      console.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n      return ! this.enableRotate;\n\n    },\n\n    set: function ( value ) {\n\n      console.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n      this.enableRotate = ! value;\n\n    }\n\n  },\n\n  noPan: {\n\n    get: function () {\n\n      console.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n      return ! this.enablePan;\n\n    },\n\n    set: function ( value ) {\n\n      console.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n      this.enablePan = ! value;\n\n    }\n\n  },\n\n  noKeys: {\n\n    get: function () {\n\n      console.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n      return ! this.enableKeys;\n\n    },\n\n    set: function ( value ) {\n\n      console.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n      this.enableKeys = ! value;\n\n    }\n\n  },\n\n  staticMoving: {\n\n    get: function () {\n\n      console.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n      return ! this.enableDamping;\n\n    },\n\n    set: function ( value ) {\n\n      console.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n      this.enableDamping = ! value;\n\n    }\n\n  },\n\n  dynamicDampingFactor: {\n\n    get: function () {\n\n      console.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n      return this.dampingFactor;\n\n    },\n\n    set: function ( value ) {\n\n      console.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n      this.dampingFactor = value;\n\n    }\n\n  }\n\n} );\n","'use strict';\n\nclass LightManager {\n  constructor(scene) {\n    this.scene = scene;\n    this.scene.add(new THREE.AmbientLight(0xffffff, 0.7));\n\n    this.light = new THREE.DirectionalLight(0xffffff, 0.1);\n    this.light.position.x = 20;\n    this.light.position.y = 150;\n    this.light.position.z = 90;\n    this.light.name = 'dirlight';\n\n    this.scene.add(this.light);\n    this.light.castShadow = true;\n  }\n}\n\nmodule.exports = LightManager;\n","'use strict';\n\nconst VisualManager = require('./visual-manager');\n\n$(document).ready(() => {\n  const visualManager = new VisualManager();\n  visualManager.initialize();\n});\n","'use strict';\n\nconst ENABLE_ROTATION = false;\n\nclass Planet {\n  constructor(_scene) {\n    this.scene = _scene;\n    this.createSkyBox();\n  }\n\n  createSkyBox() {\n    const skyBoxGeometry = new THREE.BoxGeometry(10, 10, 10);\n    const skyBoxMaterial = new THREE.MeshBasicMaterial({ color: '#fff', side: THREE.BackSide });\n    skyBoxMaterial.map = THREE.ImageUtils.loadTexture('assets/sprites/Starscape.png');\n    const skyBox = new THREE.Mesh(skyBoxGeometry, skyBoxMaterial);\n    this.scene.add(skyBox);\n  }\n\n  initialize() {\n    this.initializeEarth();\n    this.initializeSmokeMap();\n  }\n\n  initializeEarth() {\n    const baseEarthGeometry = new THREE.SphereGeometry(0.5, 32, 32);\n    const earthMat = new THREE.MeshPhongMaterial();\n    this.earthMesh = new THREE.Mesh(baseEarthGeometry, earthMat);\n\n    earthMat.map = THREE.ImageUtils.loadTexture('assets/sprites/earth/earth_texture.jpg');\n    earthMat.bumpMap = THREE.ImageUtils.loadTexture('assets/sprites/earth/earth_bump_map.jpg');\n    earthMat.specularMap = THREE.ImageUtils.loadTexture('assets/sprites/earth/earth_specular.jpg');\n\n    earthMat.bumpScale = 0.05;\n    earthMat.specular = new THREE.Color('grey');\n\n    this.scene.add(this.earthMesh);\n  }\n\n  initializeSmokeMap() {\n    const smokeGeometry = new THREE.SphereGeometry(0.51, 32, 32);\n    const texturePath = 'assets/sprites/years/year_2014.png';\n\n    this.smokeMaterial = new THREE.ShaderMaterial({\n      uniforms: {\n        bufferTexture: { type: 't', value: THREE.ImageUtils.loadTexture(texturePath) },\n        time: { type: 'f', value: 0.0 },\n        scale: { type: 'v2', value: new THREE.Vector2(100, 100) }\n      },\n      blending: THREE.NormalBlending,\n      depthTest: true,\n      transparent: true,\n\n      vertexShader: document.getElementById('vertexShader').textContent,\n      fragmentShader: document.getElementById('fragment-shader-smoke').textContent\n    });\n\n    this.smokeMesh = new THREE.Mesh(smokeGeometry, this.smokeMaterial);\n    this.scene.add(this.smokeMesh);\n  }\n\n  update() {\n    if (ENABLE_ROTATION) {\n      this.earthMesh.rotation.y += 0.002;\n      this.smokeMesh.rotation.y += 0.002;\n      // this.smokeMesh.rotation.y += 0.001;\n    }\n\n    // this.smokeMaterial.uniforms.time.value += 0.001;\n    this.smokeMaterial.uniforms.time.value += 0.0025;\n  }\n}\n\nmodule.exports = Planet;\n","'use strict';\n\nconst LightManager = require('./light-manager');\nconst CameraManager = require('./camera-manager');\nconst Planet = require('./planet');\nrequire('./lib/orbital-controls');\n\nconst GAME_FPS = 50;\n\nconst VISUAL_AREA_DIV_ID = 'display-area';\nconst CANVAS_ID = 'display-canvas';\n\nlet visualManager;\n\nclass VisualManager {\n  constructor() {\n    this.renderer = null;\n  }\n\n  initialize() {\n    visualManager = this;\n    this.renderer = null;\n    this.scene = new THREE.Scene();\n    this.previousPlayerState = {};\n    this.loops = 0;\n    this.skipTicks = 1000 / GAME_FPS;\n    this.maxFrameSkip = 10;\n    this.nextGameTick = (new Date()).getTime();\n\n    this.planet = new Planet(this.scene);\n    this.lightManager = new LightManager(this.scene);\n    this.cameraManager = new CameraManager(this.scene, this);\n    this.initializeGraphics();\n\n    this.planet.initialize();\n    this.render();\n  }\n\n  initializeGraphics() {\n    const canvasElement = document.getElementById(CANVAS_ID);\n    this.renderer = new THREE.WebGLRenderer({ antialias: true, canvas: canvasElement });\n\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.renderer.setClearColor(0xffffff, 1);\n\n    this.renderer.shadowMapType = THREE.PCFSoftShadowMap;\n    this.renderer.shadowMapEnabled = true;\n    this.renderer.shadowMapSoft = false;\n\n    this.renderer.shadowCameraNear = 3;\n    this.renderer.shadowCameraFar = this.cameraManager.far;\n    this.renderer.shadowCameraFov = 50;\n\n    this.renderer.shadowMapBias = 0.0001;\n    this.renderer.shadowMapDarkness = 0.2;\n    this.renderer.shadowMapWidth = 2048;\n    this.renderer.shadowMapHeight = 2048;\n\n    document.getElementById(VISUAL_AREA_DIV_ID).appendChild(this.renderer.domElement);\n\n    document.body.oncontextmenu = () => false;\n    THREE.OrbitControls(this.cameraManager.camera, canvasElement);\n\n    window.addEventListener('resize', () => {\n      this.cameraManager.camera.aspect = window.innerWidth / window.innerHeight;\n      this.cameraManager.camera.updateProjectionMatrix();\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n    }, false);\n  }\n\n  render() {\n    // eslint-disable-next-line\n    requestAnimationFrame(visualManager.render);\n    visualManager.visualUpdate();\n    visualManager.renderer.render(visualManager.scene, visualManager.cameraManager.camera);\n  }\n\n  visualUpdate() {\n    visualManager.loops = 0;\n    while (((new Date()).getTime() > visualManager.nextGameTick) &&\n        (visualManager.loops < visualManager.maxFrameSkip)) {\n      visualManager.update();\n      visualManager.nextGameTick += visualManager.skipTicks;\n      visualManager.loops += 1;\n    }\n\n    // Used to prevent speed up issue\n    if (visualManager.loops > 0) {\n      this.visualUpdate();\n    }\n  }\n\n  update() {\n    this.cameraManager.update();\n    this.planet.update();\n  }\n}\n\nmodule.exports = VisualManager;\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}